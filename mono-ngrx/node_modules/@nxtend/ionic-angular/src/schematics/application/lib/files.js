"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeFiles = exports.addFiles = void 0;
const schematics_1 = require("@angular-devkit/schematics");
const workspace_1 = require("@nrwl/workspace");
function addBaseFiles(options) {
    return schematics_1.mergeWith(schematics_1.apply(schematics_1.url(`./files/base`), [
        schematics_1.applyTemplates(Object.assign(Object.assign({}, options), workspace_1.names(options.name))),
        options.unitTestRunner === 'none'
            ? schematics_1.filter((file) => !file.endsWith('.spec.ts'))
            : schematics_1.noop(),
        schematics_1.move(options.appProjectRoot),
    ]), schematics_1.MergeStrategy.Overwrite);
}
function addTemplateFiles(options) {
    return schematics_1.mergeWith(schematics_1.apply(schematics_1.url(`./files/${options.template}`), [
        schematics_1.applyTemplates(Object.assign(Object.assign({}, options), workspace_1.names(options.name))),
        options.unitTestRunner === 'none'
            ? schematics_1.filter((file) => !file.endsWith('.spec.ts'))
            : schematics_1.noop(),
        schematics_1.move(options.appProjectRoot),
    ]), schematics_1.MergeStrategy.Overwrite);
}
function addFiles(options) {
    return schematics_1.chain([addBaseFiles(options), addTemplateFiles(options)]);
}
exports.addFiles = addFiles;
function removeFiles(options) {
    return (host) => {
        host.delete(`${options.appProjectRoot}/src/favicon.ico`);
        return host;
    };
}
exports.removeFiles = removeFiles;
//# sourceMappingURL=files.js.map